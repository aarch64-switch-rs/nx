(function() {
    var type_impls = Object.fromEntries([["zerocopy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConvertError%3CInfallible,+SizeError%3CSrc,+Dst%3E,+ValidityError%3CSrc,+Dst%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#868-910\">Source</a><a href=\"#impl-ConvertError%3CInfallible,+SizeError%3CSrc,+Dst%3E,+ValidityError%3CSrc,+Dst%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Src, Dst: ?Sized + <a class=\"trait\" href=\"zerocopy/trait.TryFromBytes.html\" title=\"trait zerocopy::TryFromBytes\">TryFromBytes</a>&gt; <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;Infallible, <a class=\"struct\" href=\"zerocopy/error/struct.SizeError.html\" title=\"struct zerocopy::error::SizeError\">SizeError</a>&lt;Src, Dst&gt;, <a class=\"struct\" href=\"zerocopy/error/struct.ValidityError.html\" title=\"struct zerocopy::error::ValidityError\">ValidityError</a>&lt;Src, Dst&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_src\" class=\"method\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#871-877\">Source</a><h4 class=\"code-header\">pub fn <a href=\"zerocopy/error/enum.ConvertError.html#tymethod.into_src\" class=\"fn\">into_src</a>(self) -&gt; Src</h4></section></summary><div class=\"docblock\"><p>Produces the source underlying the failed conversion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_src\" class=\"method\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#903-909\">Source</a><h4 class=\"code-header\">pub fn <a href=\"zerocopy/error/enum.ConvertError.html#tymethod.map_src\" class=\"fn\">map_src</a>&lt;NewSrc&gt;(\n    self,\n    f: impl FnOnce(Src) -&gt; NewSrc,\n) -&gt; <a class=\"type\" href=\"zerocopy/error/type.TryReadError.html\" title=\"type zerocopy::error::TryReadError\">TryReadError</a>&lt;NewSrc, Dst&gt;</h4></section></summary><div class=\"docblock\"><p>Maps the source value associated with the conversion error.</p>\n<p>This can help mitigate <a href=\"zerocopy/error/index.html#send-sync-and-static\" title=\"mod zerocopy::error\">issues with <code>Send</code>, <code>Sync</code> and <code>'static</code>\nbounds</a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>core::num::NonZeroU32;\n<span class=\"kw\">use </span>zerocopy::<span class=\"kw-2\">*</span>;\n\n<span class=\"kw\">let </span>source: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>];\n\n<span class=\"comment\">// Try to read a `NonZeroU32` from `source`.\n</span><span class=\"kw\">let </span>maybe_u32: <span class=\"prelude-ty\">Result</span>&lt;NonZeroU32, TryReadError&lt;<span class=\"kw-2\">&amp;</span>[u8], NonZeroU32&gt;&gt;\n    = NonZeroU32::try_read_from_bytes(<span class=\"kw-2\">&amp;</span>source[..]);\n\n<span class=\"comment\">// Map the error's source to its size.\n</span><span class=\"kw\">let </span>maybe_u32: <span class=\"prelude-ty\">Result</span>&lt;NonZeroU32, TryReadError&lt;usize, NonZeroU32&gt;&gt; =\n    maybe_u32.map_err(|err| {\n        err.map_src(|src| src.len())\n    });</code></pre></div>\n</div></details></div></details>",0,"zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#208-217\">Source</a><a href=\"#impl-Debug-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A: Debug, S: Debug, V: Debug&gt; Debug for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#210-216\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#224-233\">Source</a><a href=\"#impl-Display-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A: Display, S: Display, V: Display&gt; Display for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;</h3><div class=\"docblock\"><p>Produces a human-readable error message.</p>\n</div></section></summary><div class=\"docblock\"><p>The message differs between debug and release builds. When\n<code>debug_assertions</code> are enabled, this message is verbose and includes\npotentially sensitive information.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#226-232\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Display","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#237-243\">Source</a><a href=\"#impl-Error-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, S, V&gt; Error for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;<div class=\"where\">where\n    A: Display + Debug,\n    S: Display + Debug,\n    V: Display + Debug,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.30.0\">1.30.0</span><a href=\"#method.source\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">source</a>(&amp;self) -&gt; Option&lt;&amp;(dyn Error + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.description\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">description</a>(&amp;self) -&gt; &amp;str</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.cause\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">cause</a>(&amp;self) -&gt; Option&lt;&amp;dyn Error&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a href=\"#method.provide\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut Request&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a>Read more</a></div></details></div></details>","Error","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlignmentError%3CSrc,+Dst%3E%3E-for-ConvertError%3CAlignmentError%3CSrc,+Dst%3E,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#402-409\">Source</a><a href=\"#impl-From%3CAlignmentError%3CSrc,+Dst%3E%3E-for-ConvertError%3CAlignmentError%3CSrc,+Dst%3E,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Src, Dst: ?Sized, S, V&gt; From&lt;<a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;&gt; for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;<a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;, S, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#406-408\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(err: <a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AlignmentError<Src, Dst>>","zerocopy::error::CastError","zerocopy::error::TryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConvertError%3CAlignmentError%3CSrc,+Dst%3E,+S,+V%3E%3E-for-ConvertError%3CInfallible,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#163-206\">Source</a><a href=\"#impl-From%3CConvertError%3CAlignmentError%3CSrc,+Dst%3E,+S,+V%3E%3E-for-ConvertError%3CInfallible,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Src, Dst: ?Sized + <a class=\"trait\" href=\"zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a>, S, V&gt; From&lt;<a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;<a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;, S, V&gt;&gt; for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;Infallible, S, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#199-205\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(\n    err: <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;<a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;, S, V&gt;,\n) -&gt; <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;Infallible, S, V&gt;</h4></section></summary><div class=\"docblock\"><p>Infallibly discards the alignment error from this <code>ConvertError</code> since\n<code>Dst</code> is unaligned.</p>\n<p>Since <a href=\"zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\"><code>Dst: Unaligned</code></a>, it is impossible to encounter an alignment\nerror. This method permits discarding that alignment error infallibly\nand replacing it with [<code>Infallible</code>].</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>core::convert::Infallible;\n<span class=\"kw\">use </span>zerocopy::<span class=\"kw-2\">*</span>;\n\n<span class=\"attr\">#[derive(TryFromBytes, KnownLayout, Unaligned, Immutable)]\n#[repr(C, packed)]\n</span><span class=\"kw\">struct </span>Bools {\n    one: bool,\n    two: bool,\n    many: [bool],\n}\n\n<span class=\"kw\">impl </span>Bools {\n    <span class=\"kw\">fn </span>parse(bytes: <span class=\"kw-2\">&amp;</span>[u8]) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"kw-2\">&amp;</span>Bools, AlignedTryCastError&lt;<span class=\"kw-2\">&amp;</span>[u8], Bools&gt;&gt; {\n        <span class=\"comment\">// Since `Bools: Unaligned`, we can infallibly discard\n        // the alignment error.\n        </span>Bools::try_ref_from_bytes(bytes).map_err(Into::into)\n    }\n}</code></pre></div>\n</div></details></div></details>","From<ConvertError<AlignmentError<Src, Dst>, S, V>>","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSizeError%3CSrc,+Dst%3E%3E-for-ConvertError%3CA,+SizeError%3CSrc,+Dst%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#548-553\">Source</a><a href=\"#impl-From%3CSizeError%3CSrc,+Dst%3E%3E-for-ConvertError%3CA,+SizeError%3CSrc,+Dst%3E,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Src, Dst: ?Sized, A, V&gt; From&lt;<a class=\"struct\" href=\"zerocopy/error/struct.SizeError.html\" title=\"struct zerocopy::error::SizeError\">SizeError</a>&lt;Src, Dst&gt;&gt; for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, <a class=\"struct\" href=\"zerocopy/error/struct.SizeError.html\" title=\"struct zerocopy::error::SizeError\">SizeError</a>&lt;Src, Dst&gt;, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#550-552\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(err: <a class=\"struct\" href=\"zerocopy/error/struct.SizeError.html\" title=\"struct zerocopy::error::SizeError\">SizeError</a>&lt;Src, Dst&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SizeError<Src, Dst>>","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CValidityError%3CSrc,+Dst%3E%3E-for-ConvertError%3CA,+S,+ValidityError%3CSrc,+Dst%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#656-663\">Source</a><a href=\"#impl-From%3CValidityError%3CSrc,+Dst%3E%3E-for-ConvertError%3CA,+S,+ValidityError%3CSrc,+Dst%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Src, Dst: ?Sized + <a class=\"trait\" href=\"zerocopy/trait.TryFromBytes.html\" title=\"trait zerocopy::TryFromBytes\">TryFromBytes</a>, A, S&gt; From&lt;<a class=\"struct\" href=\"zerocopy/error/struct.ValidityError.html\" title=\"struct zerocopy::error::ValidityError\">ValidityError</a>&lt;Src, Dst&gt;&gt; for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, <a class=\"struct\" href=\"zerocopy/error/struct.ValidityError.html\" title=\"struct zerocopy::error::ValidityError\">ValidityError</a>&lt;Src, Dst&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#660-662\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(err: <a class=\"struct\" href=\"zerocopy/error/struct.ValidityError.html\" title=\"struct zerocopy::error::ValidityError\">ValidityError</a>&lt;Src, Dst&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ValidityError<Src, Dst>>","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#153\">Source</a><a href=\"#impl-PartialEq-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A: PartialEq, S: PartialEq, V: PartialEq&gt; PartialEq for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#153\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;) -&gt; bool</h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<section id=\"impl-Eq-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#153\">Source</a><a href=\"#impl-Eq-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A: Eq, S: Eq, V: Eq&gt; Eq for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;</h3></section>","Eq","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"],["<section id=\"impl-StructuralPartialEq-for-ConvertError%3CA,+S,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#153\">Source</a><a href=\"#impl-StructuralPartialEq-for-ConvertError%3CA,+S,+V%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A, S, V&gt; StructuralPartialEq for <a class=\"enum\" href=\"zerocopy/error/enum.ConvertError.html\" title=\"enum zerocopy::error::ConvertError\">ConvertError</a>&lt;A, S, V&gt;</h3></section>","StructuralPartialEq","zerocopy::error::CastError","zerocopy::error::TryCastError","zerocopy::error::TryReadError","zerocopy::error::AlignedTryCastError"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21127]}