(function() {
    var type_impls = Object.fromEntries([["spinning_top",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#949\">Source</a><a href=\"#impl-Debug-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Debug for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: Debug + 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#950\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result&lt;(), Error&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#924\">Source</a><a href=\"#impl-Deref-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Deref for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#925\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#927\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deref</a>(&amp;self) -&gt; &amp;T</h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#932\">Source</a><a href=\"#impl-DerefMut-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; DerefMut for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#934\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut T</h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#955-956\">Source</a><a href=\"#impl-Display-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Display for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: Display + 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#958\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result&lt;(), Error&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Display","spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#939\">Source</a><a href=\"#impl-Drop-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Drop for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#941\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a>Read more</a></div></details></div></details>","Drop","spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#849\">Source</a><a href=\"#impl-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#859-861\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lock_api/mutex/struct.MappedMutexGuard.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(\n    s: <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;,\n    f: F,\n) -&gt; <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, U&gt;<div class=\"where\">where\n    F: FnOnce(&amp;mut T) -&gt; &amp;mut U,\n    U: ?Sized,</div></h4></section></summary><div class=\"docblock\"><p>Makes a new <code>MappedMutexGuard</code> for a component of the locked data.</p>\n<p>This operation cannot fail as the <code>MappedMutexGuard</code> passed\nin already locked the mutex.</p>\n<p>This is an associated function that needs to be\nused as <code>MappedMutexGuard::map(...)</code>. A method would interfere with methods of\nthe same name on the contents of the locked data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#883-885\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lock_api/mutex/struct.MappedMutexGuard.html#tymethod.try_map\" class=\"fn\">try_map</a>&lt;U, F&gt;(\n    s: <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;,\n    f: F,\n) -&gt; Result&lt;<a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, U&gt;, <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;&gt;<div class=\"where\">where\n    F: FnOnce(&amp;mut T) -&gt; Option&lt;&amp;mut U&gt;,\n    U: ?Sized,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to make a new <code>MappedMutexGuard</code> for a component of the\nlocked data. The original guard is returned if the closure returns <code>None</code>.</p>\n<p>This operation cannot fail as the <code>MappedMutexGuard</code> passed\nin already locked the mutex.</p>\n<p>This is an associated function that needs to be\nused as <code>MappedMutexGuard::try_map(...)</code>. A method would interfere with methods of\nthe same name on the contents of the locked data.</p>\n</div></details></div></details>",0,"spinning_top::spinlock::MappedSpinlockGuard"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#901\">Source</a><a href=\"#impl-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutexFair.html\" title=\"trait lock_api::mutex::RawMutexFair\">RawMutexFair</a> + 'a,\n    T: 'a + ?Sized,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock_fair\" class=\"method\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#915\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lock_api/mutex/struct.MappedMutexGuard.html#tymethod.unlock_fair\" class=\"fn\">unlock_fair</a>(s: <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;)</h4></section></summary><div class=\"docblock\"><p>Unlocks the mutex using a fair unlock protocol.</p>\n<p>By default, mutexes are unfair and allow the current thread to re-lock\nthe mutex before another has the chance to acquire the lock, even if\nthat thread has been blocked on the mutex for a long time. This is the\ndefault because it allows much higher throughput as it avoids forcing a\ncontext switch on every mutex unlock. This can result in one thread\nacquiring a mutex many more times than other threads.</p>\n<p>However in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the <code>MutexGuard</code> normally.</p>\n</div></details></div></details>",0,"spinning_top::spinlock::MappedSpinlockGuard"],["<section id=\"impl-Send-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#844-845\">Source</a><a href=\"#impl-Send-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Send for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'a,\n    T: Send + 'a + ?Sized,\n    &lt;R as <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>&gt;::<a class=\"associatedtype\" href=\"lock_api/mutex/trait.RawMutex.html#associatedtype.GuardMarker\" title=\"type lock_api::mutex::RawMutex::GuardMarker\">GuardMarker</a>: Send,</div></h3></section>","Send","spinning_top::spinlock::MappedSpinlockGuard"],["<section id=\"impl-Sync-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lock_api/mutex.rs.html#840-841\">Source</a><a href=\"#impl-Sync-for-MappedMutexGuard%3C'a,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R, T&gt; Sync for <a class=\"struct\" href=\"lock_api/mutex/struct.MappedMutexGuard.html\" title=\"struct lock_api::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + Sync + 'a,\n    T: Sync + 'a + ?Sized,</div></h3></section>","Sync","spinning_top::spinlock::MappedSpinlockGuard"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[14143]}