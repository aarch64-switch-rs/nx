searchState.loadedDescShard("generic_once_cell", 0, "Overview\nA value which is initialized on the first access.\nA thread-safe cell which can be written to only once.\nCreates a new lazy value using <code>Default</code> as the initializing …\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the reference to the underlying value.\nGets the reference to the result of this lazy value if it …\nGets the mutable reference to the underlying value.\nGets the reference to the result of this lazy value if it …\nGets the contents of the cell, initializing it with <code>f</code> if …\nGets the contents of the cell, initializing it with <code>f</code> if …\nGet the reference to the underlying value, without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>OnceCell</code>, returning the wrapped value. Returns\nConsumes this <code>Lazy</code> returning the stored value.\nCreates a new empty cell.\nCreates a new lazy value with the given initializing …\nSets the contents of this cell to <code>value</code>.\nTakes the value out of this <code>OnceCell</code>, moving it back to an …\nLike <code>set</code>, but also returns a reference to the final cell …\nCreates a new initialized cell.")