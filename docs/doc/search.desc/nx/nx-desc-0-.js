searchState.loadedDescShard("nx", 0, "Userland library for Nintendo Switch homebrew (and other …\nAligns a value up based on the provided alignment which …\nARM support and utils\nGets a value corresponding to the given bit\nConstructs a <code>bit_enum</code> type value from various flags\nGets the current function name\nDefines a type meant to serve as a bitflag enum-like type\nDiagnostics (logging and aborting) support\nELF (aarch64) support and utils\nFileSystem support\nGraphics and GPU support and utils\nHBL (homebrew loader) ABI support and utils\nInput utils and wrappers\nSimplifies the creation of a (client-side IPC) type …\nIdentical to <code>ipc_client_send_request_command</code> but for a “…\nSends an IPC “Request” command\nIdentical to <code>ipc_sf_define_interface_trait</code> but for “…\nSimplifies the creation of a (client-side IPC) type …\nDefines a trait meant to be used for IPC interfaces\nChecks if the provided value is aligned to the provided …\nLibrary applet support and utils\nLibrary macros\nMemory (heap) support and utils\nCreates a NUL-terminated string literal\nPseudo-RNG support\nGeneric library result definitions\nReads bits from a given value\nCommon result support\nCreates a result definition\nCreates a group of result definitions (all under the same …\nCreates a group of result definitions (all under the same …\nReturns a given result if the given condition is true\nReturns a given result unless the given condition is true\nWraps and returns a given result if it’s not successful\nInitial code/entrypoint support and utils\nDefines the (runtime) module name of the current project …\nDefines the (runtime) module name of the current project\nDefines a default heap initialization function for NROs …\nBase service/named port support and wrappers\nSecure monitor support and wrappers\nThis module wraps svc calls provided by <code>svc.s</code>. There is no …\nSynchronization support and utils\nThreading support and wrappers\nCommon library utilities\nSystem version utils\nVirtual memory support\nSync/waiting utilities and wrappers\nWrites bits into a given value\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents a CPU register value (<code>W</code>, <code>X</code> or <code>R</code> value depending …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents a FPU register value (<code>V</code>, <code>D</code> or <code>S</code> value depending …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents flags of different register kinds/groups.\nRepresents a thread context usable with <code>svc</code>s.\nFlushes memory cache at a certain memory location.\nChecks if the provided <code>$name</code> has all of the set bits in …\nThe FP register.\nThe FPCR value.\nThe FPSR value.\nThe general-purpose FPU registers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the value as the underlying type\nGets the <code>FpuRegister</code> as an <code>D</code> value.\nGets the <code>CpuRegister</code> as an <code>R</code> value.\nGets the <code>FpuRegister</code> as an <code>S</code> value.\nGets the system tick.\nGets the system tick frequency.\nGets the <code>FpuRegister</code> as an <code>V</code> value.\nGets the <code>CpuRegister</code> as an <code>W</code> value.\nGets the <code>CpuRegister</code> as an <code>X</code> value.\nThe general-purpose CPU registers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe LR register.\nConverts nanoseconds to ticks.\nThe PC register.\nThe PSR value.\nThe register value.\nThe register value.\nSets the <code>FpuRegister</code> from an <code>D</code> value.\nSets the <code>CpuRegister</code> from an <code>R</code> value.\nSets the <code>FpuRegister</code> from an <code>S</code> value.\nSets the <code>FpuRegister</code> from an <code>V</code> value.\nSets the <code>CpuRegister</code> from an <code>W</code> value.\nSets the <code>CpuRegister</code> from an <code>X</code> value.\nThe SP register.\nConverts ticks to nanoseconds.\nThe TPIDR value.\nAborting implementation\nLogging support and utils\nDiagnostics-related result definitions\nRepresents a system to abort, plus optional flags they have\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nAttempts to abort at the specified <code>AbortLevel</code>\nChecks if the provided <code>$name</code> has all of the set bits in …\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the value as the underlying type\nGets the next <code>AbortLevel</code>\nCalls <code>U::from(self)</code>.\nRepresents the metadata used on a logging context\nRepresents the logging severity\nRepresents a logging object\nThe source file name\nThe source function name\nReturns the argument unchanged.\n<code>FsAccessLog</code> logger implementation\nCalls <code>U::from(self)</code>.\nThe source line number\n<code>LogManager</code> logger implementation\nLogs with the given metadata\nWrapper for logging a single log\nThe log message\nCreates a new logging object\nCreates a new <code>LogMetadata</code>\nThe log severity\nSVC-output logger implementation\nWhether the log is verbose\nRepresents a logger though <code>FsAccessLog</code>s (see …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a logger through <code>LogService</code> services\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a logger through <code>output_debug_string</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents an ELF dynamic entry.\nA struct containing a pointer sized int, representing a …\nRepresents an ELF info value.\nRepresents an ELF info symbol.\nRepresents an ELF Rel type.\nRepresents an ELF Rela type.\nRepresents ELF relocation types.\nRepresents ELF tags. Cherry picked from valid relocation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMOD0 format utils\nELF-related result definitions\nRelocates a base address with its corresponding <code>Dyn</code> …\nRepresents the <code>MOD0</code> header structure. Although we know …\nThe header magic value (<code>MOD0</code>)\nRepresents the <code>MOD0</code> start layout, which are the first 8 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the header embedded at the slot <code>.text.jmp+4</code>. Since …\nGets the start address for the <code>.dynamic</code> section\nGets the start address for the <code>eh_frame_hdr</code> section.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe magic offset\nReserved\nZeroes the bss section from a base code address. We have …\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents a directory.\nRepresents a wrapper type to simplify directory access\nRepresents a file, abstracted from the IPC client API.\nRepresents a wrapper type to simplify file access, …\nRepresents options for opening files\nRepresents a filesystem.\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents a wrapper <code>Directory</code> implementation to translate …\nRepresents a wrapper <code>File</code> implementation to translate IPC …\nRepresents a wrapper <code>FileSystem</code> implementation to …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nRepresents an offset kind/relativeness.\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nCommits on a filesystem\nCommits the filesystem, flushing pending writes.\nChecks if the provided <code>$name</code> has all of the set bits in …\nConverts a <code>FileOpenMode</code> to a <code>FileOpenOption</code>\nConverts a <code>FileOpenOption</code> to a <code>FileOpenMode</code>\nCreates a directory\nCreates a directory.\nCreates a file\nCreates a file.\nFlushes the pending file writes.\nReturns the <code>FileSystem</code> and the processed path …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the value as the underlying type\nGets the <code>Directory</code>’s entry count.\nGets the directory entry count.\nGets a path’s <code>DirectoryEntryType</code>\nGets a path’s <code>DirectoryEntryType</code>.\nGets the <code>FileTimeStampRaw</code> of a file\nGets the <code>FileTimeStampRaw</code> of a file.\nGets the free space size at a given path\nGets the free space size at a given path.\nGets the global <code>IFileSystemProxyClient</code> shared object used …\nGets the underlying <code>Directory</code> shared object.\nReturns the <code>FileSystem</code> corresponding to a given path\nGets the current file size.\nGets the file size.\nGets the total space size at a given path\nGets the total space size at a given path.\nInitializes <code>fsp-srv</code> support instantiating a <code>FileSystemProxy</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets whether <code>fsp-srv</code> support was initialized\nMounts a <code>FileSystem</code>\nMounts an IPC <code>IFileSystemClient</code>\nMounts the system’s SD card using <code>fsp-srv</code> support\nCreates a new <code>ProxyFile</code> from a <code>IFileClient</code> shared object.\nCreates a new <code>FileAccessor</code> from a given <code>File</code> shared object.\nCreates a new <code>DirectoryAccessor</code> from a given <code>Directory</code> …\nCreates a new <code>ProxyDirectory</code> from a <code>IDirectoryClient</code> …\nCreates a new <code>ProxyFileSystem</code> from a <code>IFileSystemClient</code> …\nOpens a directory as a <code>DirectoryAccessor</code>\nOpens a <code>Directory</code>.\nOpens a file as a <code>FileAccessor</code>\nOpens a <code>File</code>.\nPerforms a range-operation on the file, returning …\nPerforms a range-operation on the file with custom …\nQueries on a path\nQueries on a path.\nFS-related result definitions\nReads data from the file, returning the actual read size.\nReads existing entries, returning the actual number of …\nReads data into the given array.\nTries to read the next entry.\nReads a value.\nDeletes all the children files/directories inside a …\nDeletes all the children files/directories inside a …\nDeletes a directory\nDeletes a directory.\nDeletes a directory and all its children files/directories\nDeletes a directory and all its children files/directories.\nDeletes a file\nDeletes a file.\nRenames a file/directory\nRenames a directory\nRenames a directory.\nRenames a file\nRenames a file.\nSeeks in the file to a certain offset.\nSets the “concatenation file” attribute on a file.\nSets the file size.\nHelper object types for treating FS subdirectories as IPC …\nUnmounts a mounted filesystem\nUnmounts all filesystems\nWrites data to a file (this one doesn’t return the …\nWrites data from the given array\nWrites a value\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents an  <code>FileSystem</code> object wrapping around a FS …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SubDir</code> from a <code>FileSystem</code> instance.\nDisconnect any API originally connected from the process …\nDisconnect only the specified API.\n“nvdrv:a”\n“nvdrv”\n“vi:u”\nBuffers will be queued by the the camera HAL.\nRepresents supported color formats\nRepresents connection APIs\nRepresents a graphics context\nBuffers will be queued after being filled using the CPU.\nRepresents disconnect modes\nRepresents display scan format types\nBuffers will be queued by EGL via eglSwapBuffers after …\nRepresents a fence layout\nRepresents a graphic buffer layout\nRepresents a graphic buffer header layout\nRepresents allocator usage flags\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nMarker for invalid API values.\nRepresents kinds\nRepresents a layer Z value\nRepresents layout types\nRepresents the magic value of this layout\nRepresents the magic value of this layout\n“vi:m”\nAlways inserts at the front\nBuffers will be queued by Stagefright after being filled …\nAlways inserts at the back\nRepresents a multiple fence layout\nRepresents <code>nvdrv:*</code> service kinds\nRepresents supported pixel formats. Defined in AOSP’s …\nRepresents a plane layout\nRepresents a queue buffer input layout\nRepresents a queue buffer output layout\nRepresents a rectangle layout\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nA holder for our <code>*RootService</code> objects, just to keep them …\nRepresents the screen height\nRepresents the screen width\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\n“nvdrv:s”\nRepresents a transform type\nInserts with a specified Z value\nRepresents <code>vi:*</code> service kinds\nBinder support and utils\nThe base-2 log of the block height\nThe buffer size\nThe buffer type\nGets the bytes-per-pixel (<code>bpp</code>) of a <code>ColorFormat</code> value …\nThe color format\nChecks if the provided <code>$name</code> has all of the set bits in …\nConverts <code>ErrorCode</code> to a regular <code>Result</code>\nThe display scan format\nDestroys the <code>Context</code>, closing everything it opened when it …\nThe external pixel format\nThe FD count\nThe flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Context</code> with already existing service objects\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe full size\nReturns the value as the underlying type\nGets the underlying <code>IApplicationDisplayClient</code> object\nGets the underlying <code>IApplicationDisplayClient</code> object …\nGets the underlying <code>IHOSBinderDriverClient</code> object\nThe allocator usage\nThe allocator usage\nThe header\nThe height\nThe height\nThe height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ioctl</code> command definitions and support\nThe kind\nThe layout\nThe magic\nThe magic\nThe map handle\nThe map ID\nCreates a new <code>Context</code>\nCreates a new, empty <code>QueueBufferOutput</code>\nGets the underlying NV <code>INvDrvClient</code> service object\nGets the underlying NV <code>INvDrvClient</code> service object mutably\nThe offset\nParcel support and utils\nThe pending buffer count\nThe PID\nThe PID\nThe pitch\nThe pixel format\nThe pixel format\nThe plane count\nThe planes\nGPU-specific result definitions\nThe reference count\nThe second field offset\nThe size\nThe stride\nThe stride\nSurface (gfx wrapper) implementation\nThe transform hint\nUnknown/unused\nEmpty value\nEmpty value\nUnused\nThe width\nThe width\nThe width\nEmpty value\nRepresents a binder object, wrapping transaction …\nRepresents binder error code values. See: 🤷 TODO: Find …\nRepresents the interface token used for parcel transactions\nPerforms a connection\nConverts <code>ErrorCode</code>s to result values\nDecreases the <code>Binder</code>’s reference counts\nDequeues a buffer\nPerforms a disconnection\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets this <code>Binder</code>’s handle\nGets this <code>Binder</code>’s underlying <code>IHOSBinderDriverClient</code> …\nGets a native handle of the underlying <code>IHOSBinderDriver</code> …\nIncreases the <code>Binder</code>’s reference counts\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Binder</code>\nQueues a buffer\nBinder-specific result definitions\nRequests a buffer at a given slot\nSets a preallocated buffer\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRGBA (4444) Pixel/Color Representation\nRGBA (8888) Pixel/Color Representation\nBlue channel\nAlpha channel\nAlpha channel\nBlue channel\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from bits.\nConvert from bits.\nRed channel\nGreen channel\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into bits.\nConvert into bits.\nCreates a new default initialized bitfield.\nCreates a new default initialized bitfield.\nCreates a new stray layer (application/applet window) that …\nTakes in standard 8-bit colors and scales them down to fit …\nCreates a new managed layer (application/applet window) …\nGreen channel\nRed channel\nCheck out a canvas/framebuffer to draw a new frame. This …\nCheck out a canvas/framebuffer to draw a new frame, …\nBlue channel\nAlpha channel\nBlue channel\nAlpha channel\nAlpha channel\nBlue channel\nAlpha channel\nBlue channel\nRed channel\nGreen channel\nRed channel\nGreen channel\nGreen channel\nRed channel\nGreen channel\nRed channel\nWait for a vsync event to ensure that the previously …\nBlue channel\nAlpha channel\nBlue channel\nAlpha channel\nAlpha channel\nBlue channel\nAlpha channel\nBlue channel\nRed channel\nGreen channel\nRed channel\nGreen channel\nGreen channel\nRed channel\nGreen channel\nRed channel\nRepresents flags used in <code>NvMapAlloc</code> commands\nRepresents a type trait defining an <code>ioctl</code> command\nRepresents one of the available fds\nThe ioctl fd for “/dev/nvhost-as-gpu”\nThe ioctl fd for “/dev/nvhost-ctrl”\nRepresents the <code>SyncptWait</code> command for <code>NvHostCtrl</code> fd\nThe ioctl fd for “/dev/nvmap”\nRepresents the <code>Alloc</code> command for <code>NvMap</code> fd\nRepresents the <code>Create</code> command for <code>NvMap</code> fd\nRepresents the <code>Free</code> command for <code>NvMap</code> fd\nRepresents the <code>FromId</code> command for <code>NvMap</code> fd\nRepresents the <code>GetId</code> command for <code>NvMap</code> fd\nThe Nv driver server can only read the mapped data\nThe Nv driver server can both read and write to the mapped …\npadding to guarantee 8-byte offset for address\nThe input address\naddress of the buffer\nThe input align\nThe input <code>Fence</code>\nThe input <code>AllocFlags</code>\nflags for the opened handle (1 if requested as uncached)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>IoctlFd</code> of this command\nGets the <code>IoctlId</code> of this command\nThe output handle\nThe output handle\nThe input handle\nThe input handle\nThe input handle\nThe input heap mask\nThe input ID\nThe output ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe input <code>Kind</code>\nPadding\nThe input map size\nsize of the buffer\nThe input timeout\nRepresents a wrapper for simple parcel reading/writing\nCarrier for the layer’s parameters. Used to receive the …\nRepresents a parcel header layout\nRepresents a parcel payload layout\nNUL-terminated string containing <code>&quot;dispdrv\\0&quot;</code>\nFinishes writing and produces the payload\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBinder handle\nThe header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads an external payload in this <code>Parcel</code>\nCreates a new <code>Parcel</code>\nCreates a new, empty <code>ParcelHeader</code>\nCreates a new, empty <code>ParcelPayload</code>\nThe object list offset\nThe object list size\nThe parcel type, usually <code>0x2</code>\nThe actual payload\nThe payload offset\nThe payload size\nParcel-specific result definitions\nReads a value (aligned to a 4-byte word)\nReads raw (aligned) data\nReads raw, unaligned data\nReads a value as sized data\nReads raw sized data\nReads an unaligned value\nUnknown, maybe the process ID\nUnknown, usually zeros\nUnknown, usually zeros\nWrites a value (aligned)\nWrites an interface token\nWrites raw (aligned) data\nWrites raw, unaligned data\nReserves a certain (aligned) size at the payload, to be …\nWrites a value as sized data\nWrites raw sized data\nWrites a string\nWrites an unaligned value\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigures the scaling mode for managed layers\nRepresents a wrapper around layer manipulation\nGets the surface <code>ColorFormat</code>\nDequeues a buffer, returning the buffer address, its size, …\nDestroys the surface, closing everything it internally …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the surface height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new  <code>Surface</code>\nCreate a new stray layer covering the full screen (modeled …\nCreate a new stray layer covering the full screen (modeled …\nAdds a layer visibility stack\nQueues a buffer\nSets whether the surface (its layer) is visible\nComputes and gets the surface stride (distance between …\nWaits for the buffer event\nWaits for the given fences\nWaits for the vsync event\nGets the surface width\nRepresents the <code>u64</code> magic present in …\nRepresents optional flag values for the specific case of …\nRepresents an ABI config entry layout\nRepresents optional flags for config entries\nRepresents the entry value keys for a hbl ABI context\nRepresents the applet types for HBL\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nA wrapper around <code>AppletType</code> which can be safely shared …\nRepresents the bit set in the <code>Version</code> value if Atmosphere …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set …\nRepresents the hbl-ABI format of the system version\nStores a value into the atomic if the current value is the …\nStores a value into the atomic if the current value is the …\nStores a value into the atomic if the current value is the …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nCreates an empty <code>Version</code>, whose value will be <code>0.0.0</code>\nThe entry flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nReturns the value as the underlying type\nGets the value of the atomic without performing an atomic …\nGets the current applet type (according to HBL)\nGets the last load <code>ResultCode</code>\nGets the loader information string, about HBL\nGets the major component of the <code>Version</code>\nGets the micro component of the <code>Version</code>\nGets the minor component of the <code>Version</code>\nGets the next load argv, AKA the argv of the homebrew NRO …\nGets the next load path, AKA the path of the homebrew NRO …\nGets the current process handle\nGets the random seed values sent by HBL\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the atomic and returns the contained value.\nGets whether Atmosphere is the current OS implementation\nThe entry type identifier\nLoads a value from the atomic.\nCreates a <code>Version</code> from a raw value and the magic …\nCreates a new atomic <code>AppletType</code>.\nSets the value of the atomic without performing an atomic …\nSets the next homebrew NRO (path and argv) to execute …\nStores a value into the atomic.\nStores a value into the atomic, returning the previous …\nStores a value into the atomic, returning the previous …\nGets a <code>Version</code> type from this <code>Version</code>\nThe entry-specific values\nRepresents a simple type for dealing with input handling\nRepresents a console controller type\nDestroys the <code>Context</code>, un-mapping the shared-memory and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the up <code>NpadButton</code>s for all of the supported …\nGets the <code>NpadButton</code>s for all of the supported <code>NpadStyleTag</code>…\nGets the down <code>NpadButton</code>s for all of the supported …\nGets the up <code>NpadButton</code>s for all of the supported …\nGets the <code>NpadIdType</code> being used with this <code>Player</code>\nOpens a <code>Player</code> type for the specified <code>NpadIdType</code>\nGets the stick status from a provided style tag (which may …\nGets the <code>NpadAttribute</code>s for a certain <code>NpadStyleTag</code>\nGets the <code>NpadButton</code>s for a certain <code>NpadStyleTag</code>\nGets the down <code>NpadButton</code>s for a certain <code>NpadStyleTag</code>\nGets the up <code>NpadButton</code>s for a certain <code>NpadStyleTag</code>\nGets the supported <code>NpadStyleTag</code> flags being used with this …\nGets the current <code>TouchScreenState</code> values for the console …\nGets the current <code>TouchState</code> values for the console …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Player</code> from shared-memory information\nCreates a <code>Context</code> from supported input values\nInput-related result definitions\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads to an IPC array from a provided buffer\nTIPC (“tiny IPC”) protocol support\nReads an IPC array into a provided buffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAppletResourceUserIds are restricted to the values of …\nThis creates the required trait implementations for the …\nThis creates the required trait implementations for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nCapture button was pressed (short)\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe applet was requested to display\nThe applet received an exit request\nThe FocusState of the applet changed\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe OperationMode of the applet changed\nThe default client for the <code>#name</code> trait. All implementors …\nThe PerformanceMode of the applet changed\nThe default client for the <code>#name</code> trait. All implementors …\nA screen recoding was saved\nThe applet was resumed\nA screenshot was taken\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an enum to get the controller parameters from …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nChecks if the provided <code>$name</code> has all of the set bits in …\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nChecks if the provided <code>$name</code> has all of the set bits in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe UUID byte array\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nChecks if the provided <code>$name</code> has all of the set bits in …\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nThe default client for the <code>#name</code> trait. All implementors …\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nTells the display service how to scale spawned layers.\nThe default client for the <code>#name</code> trait. All implementors …\nChecks if the provided <code>$name</code> has all of the set bits in …\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nThe dynamic dispatch function that calls into the IPC …\nRepresents special TIPC command types\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the common arguments layout sent as starting …\nRepresents a wrapper type for using library applets\nCreates a <code>LibraryAppletHolder</code> from the given library …\nWrapper for creating a <code>IStorageClient</code> shared object from …\nDrops the <code>LibraryAppletHolder</code>, closing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the underlying …\nGets a mutable reference to the underlying …\nGets access to the global <code>ILibraryAppletCreatorClient</code> …\nInitializes library applet support with the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets whether library applet support was initialized\nWaits until the library applet’s state-changed event …\nRepresents the API version of the specific library applet …\nWrapper to create, launch and wait for a library applet, …\nCreates a <code>LibraryAppletHolder</code> from an existing …\nPadding bytes\nRepresents whether the library applet should make a …\nPops output data from the library applet\nPops an output <code>IStorageClient</code> shared object from the …\nPushes input data to the library applet\nPushes an input <code>IStorageClient</code> shared object to the …\nWrapper for reading data from a <code>IStorageClient</code> shared …\n<code>CommonArguments</code> size (essentially the <code>size_of</code> this struct)\nStarts the library applet\nRepresents the system tick of when the library applet gets …\nRepresents the theme color for the library applet to use\nRepresents the <code>CommonArguments</code> version\nWrapper for writing data to a <code>IStorageClient</code> shared object\nAllocator implementation and definitions\nFlushes data cache at a certain memory region\nBlocks thread until the memory region specified has the …\nRepresents a heap allocator for this library\nRepresents a wrapped and manually managed heap value\nLayout of a block of memory.\nThe minimum byte alignment for a memory block of this …\nCreates a layout describing the record that can hold a …\nCreates a layout describing the record for a <code>[T; n]</code>.\nDefault implementation\nCreates a <code>NonNull</code> that is dangling, but well-aligned for …\nReleases a heap value\nCreates a new, invalid <code>Buffer</code>\nCreates a layout describing the record for <code>self</code> followed by\nCreates a layout describing the record for <code>self</code> followed by\nProduces layout describing a record that could be used to …\nProduces layout describing a record that could be used to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …\nCreates a layout, bypassing all checks.\nInitializes the global allocator with the given address …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets whether heap allocations are enabled\nGets whether this <code>Buffer</code> is valid\nThe memory’s layout\nAllocates a new heap value\nCreates a new <code>Buffer</code> using the global allocator\nConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.\nCreates a new <code>Buffer</code> using a given allocator\nCreates a layout by rounding the size of this layout up to …\nReturns the amount of padding we must insert after <code>self</code> to …\nThe actual heap value\nAllocation-specific result definitions\nReleases the <code>Buffer</code>\nCreates a layout describing the record for <code>n</code> instances of …\nCreates a layout describing the record for <code>n</code> instances of …\nThe minimum size in bytes for a memory block of this …\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUser-level interface for RNGs\nImplementation-level interface for RNGs\nFill any type implementing <code>Fill</code> with random data\nFill <code>dest</code> with random data.\nAlias for <code>Rng::random</code>.\nAlias for <code>Rng::random_bool</code>.\nAlias for <code>Rng::random_range</code>.\nAlias for <code>Rng::random_ratio</code>.\nReturn the next random <code>u32</code>.\nReturn the next random <code>u64</code>.\nReturn a random value via the <code>StandardUniform</code> distribution.\nReturn a bool with a probability <code>p</code> of being true.\nReturn an iterator over <code>random</code> variates\nGenerate a random value in the given range.\nReturn a bool with a probability of <code>numerator/denominator</code> …\nSample a new value, using the given distribution.\nCreate an iterator that generates values using the given …\nResult submodule for the base <code>rc</code> module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nRepresents a result holding a certain value or a  …\nRepresents a base trait for result value definitions to …\nRepresents a (raw) result value used all over the OS\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the result definition’s description\nGets the description of the <code>ResultCode</code>\nGets the result definition’s module\nGets the module of the <code>ResultCode</code>\nGets the result definition’s raw value\nGets the raw value of the <code>ResultCode</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>ResultCode</code> is not successful\nReturns whether the <code>ResultCode</code> is successful\nProduces a <code>ResultCode</code> from this result definition\nProduces a <code>Result::Err</code> value from this result definition\nReturns whether the given <code>ResultCode</code> matches this result …\nCreates a <code>ResultCode</code> from a raw value\nWrapper for creating a new <code>Result::Err</code> value with the …\nProduces a <code>Result</code> whose value will depend on whether the …\nProduces the <code>ResultCode</code> corresponding to a packed result\nA wrapper around <code>ExecutableType</code> which can be safely shared …\nRepresents the executable type of the current process\nRepresents the fn pointer used for exiting\nRepresents the process module format used by processes\nStores a value into the atomic if the current value is the …\nStores a value into the atomic if the current value is the …\nStores a value into the atomic if the current value is the …\nExits the current process\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the value of the atomic without performing an atomic …\nGets the current process’s executable type\nGets this process’s module name\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the atomic and returns the contained value.\nLoads a value from the atomic.\nCreates a new atomic <code>ExecutableType</code>.\nCreates a <code>ModulePath</code> with the given module name\nSets the value of the atomic without performing an atomic …\nStores a value into the atomic.\nStores a value into the atomic, returning the previous …\nStores a value into the atomic, returning the previous …\nRepresents a named port interface\nRepresents a service interface\n“appletAE” service definitions.\nGets whether the service should be used as a domain\n“dispdrv” service definitions.\n“fatal:u” service definitions.\n“fsp-srv” service definitions.\nGets the name to be used to connect to the named port (via …\nGets the service’s name\n“hid” service definitions.\n“ldr:shel” service definitions.\n“lm” service definitions.\n“lr” service definitions.\n“mii:e” service definitions.\n“ncm” service definitions.\nWrapper for connecting to a named port and instantiating …\nWrapper for accessing a service and instantiating the …\n“nfp:*” service definitions.\n“nvdrv” and “nvdrv:*” service definitions.\n“pm:*” service definitions.\nThis will get executed after connecting to the named port …\nThis will get executed after accessing the service in …\n“psc:m” service definitions.\n“psm” service definitions.\n“set:sys” service definitions.\n“csrng” service definitions.\n“usb:hs” service definitions.\n“vi:*” service definitions.\nReturns the argument unchanged.\nAttempts to initialize the module, or returns if the …\nCalls <code>U::from(self)</code>.\nReturns whether the module has been successfully …\nDefault client object for the $t service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n“fsp-srv” service definitions.\nDefault client object for the $t service\nDefault client object for the $t service\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefault client object for the $t service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefault client object for the $t service\nDefault client object for the $t service\nDefault client object for the $t service\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefault client object for the $t service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefault client object for the $t service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefault client object for the $t service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n“usb:hs” service interface definitions.\nDefault client object for the $t service\nDefault client object for the $t service\nDefault client object for the $t service\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents the raw argument layout used in secure monitor …\nRepresents the secure monitor function IDs\nRepresents the maximum size of the random bytes one can …\nRepresents the secure monitor call input layout (special …\nRepresents the secure monitor call output layout (special …\nRepresents the result values returned on secure monitor …\nThe function-specific arguments\nThe calling function ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an <code>Output</code> layout from a more generic <code>Arguments</code> …\nSecure monitor call which generates random bytes\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new, empty call <code>Input</code> with a certain function ID\nThe response parameters\nThe response result\nConverts this <code>Input</code> to the more generic <code>Arguments</code> layout\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nReturns a <code>$name</code> where only the bit for <code>$entry_name</code> is set\nChecks if the provided <code>$name</code> has all of the set bits in …\nChecks if the provided <code>$name</code> has all of the set bits in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nCreates a <code>$name</code> from the underlying base type <code>$base</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value as the underlying type\nReturns the value as the underlying type\nCreates a scoped guard for the handle. The handle can …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafety\nOfficial SVC-related result definitions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a value whose access is controlled by an inner …\nRepresents a type which will lock a given <code>Mutex</code> on …\nUnlocks the <code>Mutex</code> as the <code>ScopedLock</code> is destroyed (likely …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a copy of the value, doing a lock-unlock operation in …\nGets a copy of the value, doing a lock-unlock operation in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocks the Mutex and returns a guarded reference to the …\nCreates a new <code>ScopedLock</code> for a given <code>Mutex</code>\nCreates a new <code>RwLock</code> with a value\nCreates a new <code>RwLock</code> with a value\nLocks the value for reading and returns a guarded …\nSets a value, doing a lock-unlock operation in the process\nSets a value, doing a lock-unlock operation in the process\nLocks the value for writing and returns a guarded …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSafety\nSafety\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSafety\nSafety\nThread factory, which can be used in order to configure …\nUse the default priority for the main thread (0x2C)\nContains the error value\nInherit the thread priority from the current thread\nAn owned permission to join on a thread (block on its …\nContains the success value\nA specialized <code>Result</code> type for threads.\nSet and explicit thread priority value (0..=0x3F)\nA handle to a thread.\nRepresents the console’s Thread Local Region layout\nRepresents a <code>Thread</code>’s name, a 32-byte <code>ArrayString</code>\nRepresents the priority of the (thread)<code>Thread</code> that we are …\nRepresents what core the (thread)<code>Thread</code> should start on\nRepresents the state of a <code>Thread</code>\nYields and performs forced load-balancing\nYields to another thread (possibly on a different core)\nYields to another thread on the same core\nRepresents the thread yielding types for cooperative …\nThe disabled counter\nThe interrupt flag\nSets the CPU core for the new thread to start on\nExits the current thread\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the current thread’s <code>ThreadLocalRegion</code> address\nGets the thread’s unique identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the associated thread has finished running its …\nWaits for the associated thread to finish.\nThe region used for IPC messages\nNames the thread-to-be. Currently the name is used for …\nGets the thread’s name.\nGenerates the base configuration for spawning a thread, …\nSets the priority for the new thread\nThread-specific result definitions\nSets the current <code>Thread</code> reference on the current …\nSleeps for the given timeout\nSpawns a new thread, returning a <code>JoinHandle</code> for it.\nSpawns a new thread by taking ownership of the <code>Builder</code>, …\nSpawns a new scoped thread using the settings set through …\nSpawns a new thread without any lifetime restrictions by …\nSets the size of the stack (in bytes) for the new thread, …\nExtracts a handle to the underlying thread.\nReturns the effective thread priority as the raw type (<code>i32</code>)\nWaits for the associated thread to finish, with a timeout …\nA replica of libstratosphere’s named threads\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA scope to spawn scoped threads in.\nAn owned permission to join on a scoped thread (block on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the associated thread has finished running its …\nWaits for the associated thread to finish.\nCreate a scope for spawning scoped threads.\nSpawns a new thread within a scope, returning a …\nExtracts a handle to the underlying thread.\nRepresents a C-like string of a given size (mostly like a …\nRepresents a C-like 16-bit string of a given size (mostly …\nRepresents a pair of a pointer and a size\nRepresents a pair of a pointer and a size\nRepresents a 16-byte UUID\nThe pointer address\nThe pointer address\nBorrows a view into the whole array\nBorrows a view into the whole array\nBorrows only the initialized bytes (including the null …\nBorrows only the initialized bytes (including the null …\nCreates an empty, thus invalid <code>PointerAndSize</code> (with a null …\nCreates an empty, thus invalid <code>ConstPointerAndSize</code> (with a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ArrayString</code> from a given byte array\nCreates a <code>ArrayWideString</code> from a given byte array\nCreates a <code>ArrayString</code> from a given <code>&amp;str</code>\nCreates a <code>ArrayString</code> from a given <code>&amp;str</code>\nCreates a <code>ArrayString</code> from a given <code>String</code>\nCreates a <code>ArrayWideString</code> from a given <code>String</code>\nGets a <code>&amp;str</code> corresponding to this <code>ArrayString</code>\nGets a <code>String</code> corresponding to this <code>ArrayString</code>\nGets a <code>String</code> corresponding to this <code>ArrayWideString</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this <code>ArrayString</code> is empty\nReturns if this <code>ArrayWideString</code> is empty\nChecks whether the <code>PointerAndSize</code> is valid\nChecks whether the <code>PointerAndSize</code> is valid\nReturns the length of the <code>ArrayString</code>\nReturns the length of the <code>ArrayWideString</code>\nCreates a <code>PointerAndSize</code>\nCreates a <code>ConstPointerAndSize</code>\nCreates an empty <code>ArrayString</code>\nCreates an empty <code>ArrayWideString</code>\nUtil-specific result definitions\nSets a <code>&amp;str</code> as the contents of this <code>ArrayString</code>\nSets a <code>&amp;str</code> as the contents of this <code>ArrayWideString</code>\nSets a string as the contents of this <code>ArrayString</code>\nSets a <code>String</code> as the contents of this <code>ArrayWideString</code>\nSimplified panic handler using a provided <code>Logger</code> type, …\nThe pointer size\nThe pointer size\nSame as C’s <code>strlen()</code>\nThe UUID byte array\nResult Submodule ID for the parent module\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a version with major, minor and micro components\nRepresents an interval between versions, being optionally …\nCreates a non-limited <code>VersionInterval</code>, essentially an …\nReturns whether <code>ver</code> is contained in the interval\nCreates an empty <code>Version</code> (with value <code>0.0.0</code>)\nReturns the argument unchanged.\nCreates a left-limited <code>VersionInterval</code>, including any …\nReturns the argument unchanged.\nCreates a limited <code>VersionInterval</code>, including any version …\nGets the global library value for the system <code>Version</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe major component\nThe micro component\nThe minor component\nCreates a <code>Version</code> with the supplied components\nSets the global <code>Version</code>, used in the library as the system …\nCreates a right-limited <code>VersionInterval</code>, including any …\nThe standard memory regions for NX processes\nRepresents a virtual region of memory, represented as …\nFinds available virtual memory for the specified size, …\nReturns whether the specified region is fully contained in …\nReturns whether the specified address is contained in the …\nThe (non inclusive) end address of the region\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the current process’s address space <code>VirtualRegion</code>\nGets the current process’s heap <code>VirtualRegion</code>\nGets the current process’s legacy alias <code>VirtualRegion</code>\nGets the current process’s stack <code>VirtualRegion</code>\nInitializes virtual memory support\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an empty <code>VirtualRegion</code> with invalid address values\nReturns whether the other region overlaps this instance\nThe start address of the region\nA simple handle, that doesn’t get cleared when the …\nA wait handle that has the signal automatically cleared\nRepresents the max amount of objects the Nintendo Switch …\nRepresents an event via a remote handle\nRepresents a system event with server and client handles\nRepresents a waiting object for a handle\nRepresents how a waiter operates (essentially, whether it …\nThe event’s client handle\nDestroys the <code>RemoteEvent</code>, closing its handle\nDestroys the <code>SystemEvent</code>, closing both server/client …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Waiter</code> from a handle and a type\nReturns the argument unchanged.\nCreates a new <code>Waiter</code> from a handle and <code>WaiterType::Handle</code> …\nCreates a new <code>Waiter</code> from a handle and …\nThe remote handle\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>RemoteEvent</code> from a remote handle\nCreates a new <code>SystemEvent</code> via the client/server handles …\nResets the <code>RemoteEvent</code>\nThe event’s server handle\nSignals the <code>SystemEvent</code> (via the server handle)\nWaits for several <code>Waiter</code>s for a specified timeout, …\nWaits for the <code>RemoteEvent</code> with a given timeout, then …\nWaits for several handles for a specified timeout, …")